[
  {
    "description": "Valid values for the $position parameter.\n",
    "commentRange": {
      "start": 3,
      "end": 5
    },
    "context": {
      "type": "variable",
      "name": "valid-position",
      "value": "'top', 'bottom'",
      "scope": "private",
      "line": {
        "start": 6,
        "end": 6
      }
    },
    "type": "List<String>",
    "access": "private",
    "group": [
      "undefined"
    ],
    "file": {
      "path": "_mixin.scss",
      "name": "_mixin.scss"
    },
    "usedBy": [
      {
        "description": "Mixin to generate a custom μProgress style. Allow to customize, class name, height and colors.\nGenerate a monochrome progres bar if one colors is passed or a multi-color animated one if multiple colors are passed.\n\n",
        "context": {
          "type": "mixin",
          "name": "uprogress",
          "code": "\n\t@if $colors == null or length($colors) == 0 {\n\t\t$colors: $uprogress-colors;\n\t\t@warn '$colors is null or empty, using default $uprogress-colors (#{$uprogress-colors}) .';\n\t}\n\t@if $height == null {\n\t\t$height: $uprogress-height;\n\t\t@warn '$height is null, using default $uprogress-height (#{$uprogress-height}) .';\n\t}\n\t@if index($valid-position, $position) == null {\n\t\t$position: $uprogress-position;\n\t\t@warn '$position is not valid, using default $uprogress-position (#{$uprogress-position}) .';\n\t}\n\t@if length($colors) > 1 {\n\t\t@keyframes #{$name} {\n\t\t\t0% {\n\t\t\t\tbackground-position: 0 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\tbackground-position: (100% + 100% / length($colors)) 0;\n\t\t\t}\n\t\t}\n\t\t@keyframes fadein {\n\t\t\t0% {\n\t\t\t\topacity: 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t.#{$name} {\n\t\t#{$position}: 0;\n\t\toverflow: hidden;\n\t\theight: $height * 4;\n\t\tright: 0;\n\t\tleft: 0;\n\t\tz-index: $uprogress-zindex;\n\t\t@if length($colors) == 1 {\n\t\t\t.blur {\n\t\t\t\twidth: $height * 50;\n\t\t\t\theight: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 1px;\n\t\t\t\tbox-shadow: 0 0 $height * 4 nth($colors, 1), 0 0 $height * 2 nth($colors, 1);\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(-3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.rtl .blur {\n\t\t\t\tleft: 1px;\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(-3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.bar {\n\t\t\theight: $height;\n\t\t\tposition: absolute;\n\t\t\tbackground-color: nth($colors, 1);\n\t\t\tpointer-events: none;\n\t\t\twill-change: transform;\n\t\t\t#{$position}: 0;\n\t\t\t@if length($colors) > 1 {\n\t\t\t\t$gradient-colors: append($colors, nth($colors, 1));\n\t\t\t\tbackground-image: linear-gradient(to right, $gradient-colors);\n\t\t\t\tbackground-size: length($gradient-colors) * 100%;\n\t\t\t\tanimation-name: #{$name}, fadein;\n\t\t\t\tanimation-duration: 2s, 0.3s;\n\t\t\t\tanimation-timing-function: linear, ease;\n\t\t\t\tanimation-iteration-count: infinite, 1;\n\t\t\t}\n\t\t}\n\t}\n",
          "line": {
            "start": 50,
            "end": 133
          }
        }
      }
    ]
  },
  {
    "description": "Mixin to generate a custom μProgress style. Allow to customize, class name, height and colors.\nGenerate a monochrome progres bar if one colors is passed or a multi-color animated one if multiple colors are passed.\n\n",
    "commentRange": {
      "start": 8,
      "end": 49
    },
    "context": {
      "type": "mixin",
      "name": "uprogress",
      "code": "\n\t@if $colors == null or length($colors) == 0 {\n\t\t$colors: $uprogress-colors;\n\t\t@warn '$colors is null or empty, using default $uprogress-colors (#{$uprogress-colors}) .';\n\t}\n\t@if $height == null {\n\t\t$height: $uprogress-height;\n\t\t@warn '$height is null, using default $uprogress-height (#{$uprogress-height}) .';\n\t}\n\t@if index($valid-position, $position) == null {\n\t\t$position: $uprogress-position;\n\t\t@warn '$position is not valid, using default $uprogress-position (#{$uprogress-position}) .';\n\t}\n\t@if length($colors) > 1 {\n\t\t@keyframes #{$name} {\n\t\t\t0% {\n\t\t\t\tbackground-position: 0 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\tbackground-position: (100% + 100% / length($colors)) 0;\n\t\t\t}\n\t\t}\n\t\t@keyframes fadein {\n\t\t\t0% {\n\t\t\t\topacity: 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t.#{$name} {\n\t\t#{$position}: 0;\n\t\toverflow: hidden;\n\t\theight: $height * 4;\n\t\tright: 0;\n\t\tleft: 0;\n\t\tz-index: $uprogress-zindex;\n\t\t@if length($colors) == 1 {\n\t\t\t.blur {\n\t\t\t\twidth: $height * 50;\n\t\t\t\theight: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 1px;\n\t\t\t\tbox-shadow: 0 0 $height * 4 nth($colors, 1), 0 0 $height * 2 nth($colors, 1);\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(-3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.rtl .blur {\n\t\t\t\tleft: 1px;\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(-3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.bar {\n\t\t\theight: $height;\n\t\t\tposition: absolute;\n\t\t\tbackground-color: nth($colors, 1);\n\t\t\tpointer-events: none;\n\t\t\twill-change: transform;\n\t\t\t#{$position}: 0;\n\t\t\t@if length($colors) > 1 {\n\t\t\t\t$gradient-colors: append($colors, nth($colors, 1));\n\t\t\t\tbackground-image: linear-gradient(to right, $gradient-colors);\n\t\t\t\tbackground-size: length($gradient-colors) * 100%;\n\t\t\t\tanimation-name: #{$name}, fadein;\n\t\t\t\tanimation-duration: 2s, 0.3s;\n\t\t\t\tanimation-timing-function: linear, ease;\n\t\t\t\tanimation-iteration-count: infinite, 1;\n\t\t\t}\n\t\t}\n\t}\n",
      "line": {
        "start": 50,
        "end": 133
      }
    },
    "parameter": [
      {
        "type": "String",
        "name": "name",
        "default": "uprogress",
        "description": "class to apply to the μProgress."
      },
      {
        "type": "Length",
        "name": "height",
        "default": "`$uprogress-height`",
        "description": "progressbar height."
      },
      {
        "type": "List<Color>",
        "name": "colors",
        "default": "`$uprogress-colors`",
        "description": "List of Colors."
      },
      {
        "type": "String",
        "name": "position",
        "default": "`$uprogress-position`",
        "description": "Position the µProgress on top or on bottom of its parent."
      }
    ],
    "output": "A CSS class to pass in the `class` option of the `UProgress` Javascript module.",
    "example": [
      {
        "type": "scss",
        "code": "@include uprogress(purple-progress, .25rem, rgb(113, 62, 208));\n\n// CSS Output\n.purple-progress {\n  ...\n  top: 0;\n  height: .25rem;\n  ...\n  background-color: rgb(113, 62, 208);\n}\n.purple-progress.blur {\n  ...\n  color: rgb(113, 62, 208);\n  ...\n}",
        "description": "A purple progress bar with a height of .25rem"
      },
      {
        "type": "scss",
        "code": "@include uprogress($name: rainbow-progress, $colors: (#17a0d3, #713ed0, #fc8d03, #38ad5d), $position: 'bottom');\n\n// CSS Output\n.purple-progress {\n  ...\n  bottom: 0;\n  height: 2px;\n  ...\n  background-color: #17a0d3;\n  background-image: linear-gradient(to right, #17a0d3, #713ed0, #fc8d03, #38ad5d, #17a0d3);\n  background-size: 500%;\n  animation: 2s linear infinite rainbow-progress, 0.3s fadein;\n}\n@keyframes fadein { ... }\n@keyframes rainbow-progress { ... }",
        "description": "A multi-color progress bar with default height (2px)"
      }
    ],
    "access": "public",
    "group": [
      "undefined"
    ],
    "require": [
      {
        "type": "variable",
        "name": "uprogress-colors"
      },
      {
        "type": "variable",
        "name": "uprogress-colors"
      },
      {
        "type": "variable",
        "name": "uprogress-colors"
      },
      {
        "type": "variable",
        "name": "uprogress-height"
      },
      {
        "type": "variable",
        "name": "uprogress-height"
      },
      {
        "type": "variable",
        "name": "uprogress-height"
      },
      {
        "type": "variable",
        "name": "valid-position"
      },
      {
        "type": "variable",
        "name": "uprogress-position"
      },
      {
        "type": "variable",
        "name": "uprogress-position"
      },
      {
        "type": "variable",
        "name": "uprogress-position"
      },
      {
        "type": "variable",
        "name": "uprogress-zindex"
      }
    ],
    "file": {
      "path": "_mixin.scss",
      "name": "_mixin.scss"
    }
  },
  {
    "description": "Default µProgress color.\n",
    "commentRange": {
      "start": 1,
      "end": 2
    },
    "context": {
      "type": "variable",
      "name": "uprogress-colors",
      "value": "#006be5",
      "scope": "default",
      "line": {
        "start": 3,
        "end": 3
      }
    },
    "type": "Color",
    "access": "public",
    "group": [
      "undefined"
    ],
    "file": {
      "path": "_variables.scss",
      "name": "_variables.scss"
    },
    "usedBy": [
      {
        "description": "Mixin to generate a custom μProgress style. Allow to customize, class name, height and colors.\nGenerate a monochrome progres bar if one colors is passed or a multi-color animated one if multiple colors are passed.\n\n",
        "context": {
          "type": "mixin",
          "name": "uprogress",
          "code": "\n\t@if $colors == null or length($colors) == 0 {\n\t\t$colors: $uprogress-colors;\n\t\t@warn '$colors is null or empty, using default $uprogress-colors (#{$uprogress-colors}) .';\n\t}\n\t@if $height == null {\n\t\t$height: $uprogress-height;\n\t\t@warn '$height is null, using default $uprogress-height (#{$uprogress-height}) .';\n\t}\n\t@if index($valid-position, $position) == null {\n\t\t$position: $uprogress-position;\n\t\t@warn '$position is not valid, using default $uprogress-position (#{$uprogress-position}) .';\n\t}\n\t@if length($colors) > 1 {\n\t\t@keyframes #{$name} {\n\t\t\t0% {\n\t\t\t\tbackground-position: 0 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\tbackground-position: (100% + 100% / length($colors)) 0;\n\t\t\t}\n\t\t}\n\t\t@keyframes fadein {\n\t\t\t0% {\n\t\t\t\topacity: 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t.#{$name} {\n\t\t#{$position}: 0;\n\t\toverflow: hidden;\n\t\theight: $height * 4;\n\t\tright: 0;\n\t\tleft: 0;\n\t\tz-index: $uprogress-zindex;\n\t\t@if length($colors) == 1 {\n\t\t\t.blur {\n\t\t\t\twidth: $height * 50;\n\t\t\t\theight: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 1px;\n\t\t\t\tbox-shadow: 0 0 $height * 4 nth($colors, 1), 0 0 $height * 2 nth($colors, 1);\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(-3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.rtl .blur {\n\t\t\t\tleft: 1px;\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(-3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.bar {\n\t\t\theight: $height;\n\t\t\tposition: absolute;\n\t\t\tbackground-color: nth($colors, 1);\n\t\t\tpointer-events: none;\n\t\t\twill-change: transform;\n\t\t\t#{$position}: 0;\n\t\t\t@if length($colors) > 1 {\n\t\t\t\t$gradient-colors: append($colors, nth($colors, 1));\n\t\t\t\tbackground-image: linear-gradient(to right, $gradient-colors);\n\t\t\t\tbackground-size: length($gradient-colors) * 100%;\n\t\t\t\tanimation-name: #{$name}, fadein;\n\t\t\t\tanimation-duration: 2s, 0.3s;\n\t\t\t\tanimation-timing-function: linear, ease;\n\t\t\t\tanimation-iteration-count: infinite, 1;\n\t\t\t}\n\t\t}\n\t}\n",
          "line": {
            "start": 50,
            "end": 133
          }
        }
      },
      {
        "description": "Mixin to generate a custom μProgress style. Allow to customize, class name, height and colors.\nGenerate a monochrome progres bar if one colors is passed or a multi-color animated one if multiple colors are passed.\n\n",
        "context": {
          "type": "mixin",
          "name": "uprogress",
          "code": "\n\t@if $colors == null or length($colors) == 0 {\n\t\t$colors: $uprogress-colors;\n\t\t@warn '$colors is null or empty, using default $uprogress-colors (#{$uprogress-colors}) .';\n\t}\n\t@if $height == null {\n\t\t$height: $uprogress-height;\n\t\t@warn '$height is null, using default $uprogress-height (#{$uprogress-height}) .';\n\t}\n\t@if index($valid-position, $position) == null {\n\t\t$position: $uprogress-position;\n\t\t@warn '$position is not valid, using default $uprogress-position (#{$uprogress-position}) .';\n\t}\n\t@if length($colors) > 1 {\n\t\t@keyframes #{$name} {\n\t\t\t0% {\n\t\t\t\tbackground-position: 0 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\tbackground-position: (100% + 100% / length($colors)) 0;\n\t\t\t}\n\t\t}\n\t\t@keyframes fadein {\n\t\t\t0% {\n\t\t\t\topacity: 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t.#{$name} {\n\t\t#{$position}: 0;\n\t\toverflow: hidden;\n\t\theight: $height * 4;\n\t\tright: 0;\n\t\tleft: 0;\n\t\tz-index: $uprogress-zindex;\n\t\t@if length($colors) == 1 {\n\t\t\t.blur {\n\t\t\t\twidth: $height * 50;\n\t\t\t\theight: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 1px;\n\t\t\t\tbox-shadow: 0 0 $height * 4 nth($colors, 1), 0 0 $height * 2 nth($colors, 1);\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(-3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.rtl .blur {\n\t\t\t\tleft: 1px;\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(-3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.bar {\n\t\t\theight: $height;\n\t\t\tposition: absolute;\n\t\t\tbackground-color: nth($colors, 1);\n\t\t\tpointer-events: none;\n\t\t\twill-change: transform;\n\t\t\t#{$position}: 0;\n\t\t\t@if length($colors) > 1 {\n\t\t\t\t$gradient-colors: append($colors, nth($colors, 1));\n\t\t\t\tbackground-image: linear-gradient(to right, $gradient-colors);\n\t\t\t\tbackground-size: length($gradient-colors) * 100%;\n\t\t\t\tanimation-name: #{$name}, fadein;\n\t\t\t\tanimation-duration: 2s, 0.3s;\n\t\t\t\tanimation-timing-function: linear, ease;\n\t\t\t\tanimation-iteration-count: infinite, 1;\n\t\t\t}\n\t\t}\n\t}\n",
          "line": {
            "start": 50,
            "end": 133
          }
        }
      },
      {
        "description": "Mixin to generate a custom μProgress style. Allow to customize, class name, height and colors.\nGenerate a monochrome progres bar if one colors is passed or a multi-color animated one if multiple colors are passed.\n\n",
        "context": {
          "type": "mixin",
          "name": "uprogress",
          "code": "\n\t@if $colors == null or length($colors) == 0 {\n\t\t$colors: $uprogress-colors;\n\t\t@warn '$colors is null or empty, using default $uprogress-colors (#{$uprogress-colors}) .';\n\t}\n\t@if $height == null {\n\t\t$height: $uprogress-height;\n\t\t@warn '$height is null, using default $uprogress-height (#{$uprogress-height}) .';\n\t}\n\t@if index($valid-position, $position) == null {\n\t\t$position: $uprogress-position;\n\t\t@warn '$position is not valid, using default $uprogress-position (#{$uprogress-position}) .';\n\t}\n\t@if length($colors) > 1 {\n\t\t@keyframes #{$name} {\n\t\t\t0% {\n\t\t\t\tbackground-position: 0 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\tbackground-position: (100% + 100% / length($colors)) 0;\n\t\t\t}\n\t\t}\n\t\t@keyframes fadein {\n\t\t\t0% {\n\t\t\t\topacity: 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t.#{$name} {\n\t\t#{$position}: 0;\n\t\toverflow: hidden;\n\t\theight: $height * 4;\n\t\tright: 0;\n\t\tleft: 0;\n\t\tz-index: $uprogress-zindex;\n\t\t@if length($colors) == 1 {\n\t\t\t.blur {\n\t\t\t\twidth: $height * 50;\n\t\t\t\theight: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 1px;\n\t\t\t\tbox-shadow: 0 0 $height * 4 nth($colors, 1), 0 0 $height * 2 nth($colors, 1);\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(-3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.rtl .blur {\n\t\t\t\tleft: 1px;\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(-3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.bar {\n\t\t\theight: $height;\n\t\t\tposition: absolute;\n\t\t\tbackground-color: nth($colors, 1);\n\t\t\tpointer-events: none;\n\t\t\twill-change: transform;\n\t\t\t#{$position}: 0;\n\t\t\t@if length($colors) > 1 {\n\t\t\t\t$gradient-colors: append($colors, nth($colors, 1));\n\t\t\t\tbackground-image: linear-gradient(to right, $gradient-colors);\n\t\t\t\tbackground-size: length($gradient-colors) * 100%;\n\t\t\t\tanimation-name: #{$name}, fadein;\n\t\t\t\tanimation-duration: 2s, 0.3s;\n\t\t\t\tanimation-timing-function: linear, ease;\n\t\t\t\tanimation-iteration-count: infinite, 1;\n\t\t\t}\n\t\t}\n\t}\n",
          "line": {
            "start": 50,
            "end": 133
          }
        }
      }
    ]
  },
  {
    "description": "Default µProgress height.\n",
    "commentRange": {
      "start": 4,
      "end": 5
    },
    "context": {
      "type": "variable",
      "name": "uprogress-height",
      "value": "2px",
      "scope": "default",
      "line": {
        "start": 6,
        "end": 6
      }
    },
    "type": "String",
    "access": "public",
    "group": [
      "undefined"
    ],
    "file": {
      "path": "_variables.scss",
      "name": "_variables.scss"
    },
    "usedBy": [
      {
        "description": "Mixin to generate a custom μProgress style. Allow to customize, class name, height and colors.\nGenerate a monochrome progres bar if one colors is passed or a multi-color animated one if multiple colors are passed.\n\n",
        "context": {
          "type": "mixin",
          "name": "uprogress",
          "code": "\n\t@if $colors == null or length($colors) == 0 {\n\t\t$colors: $uprogress-colors;\n\t\t@warn '$colors is null or empty, using default $uprogress-colors (#{$uprogress-colors}) .';\n\t}\n\t@if $height == null {\n\t\t$height: $uprogress-height;\n\t\t@warn '$height is null, using default $uprogress-height (#{$uprogress-height}) .';\n\t}\n\t@if index($valid-position, $position) == null {\n\t\t$position: $uprogress-position;\n\t\t@warn '$position is not valid, using default $uprogress-position (#{$uprogress-position}) .';\n\t}\n\t@if length($colors) > 1 {\n\t\t@keyframes #{$name} {\n\t\t\t0% {\n\t\t\t\tbackground-position: 0 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\tbackground-position: (100% + 100% / length($colors)) 0;\n\t\t\t}\n\t\t}\n\t\t@keyframes fadein {\n\t\t\t0% {\n\t\t\t\topacity: 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t.#{$name} {\n\t\t#{$position}: 0;\n\t\toverflow: hidden;\n\t\theight: $height * 4;\n\t\tright: 0;\n\t\tleft: 0;\n\t\tz-index: $uprogress-zindex;\n\t\t@if length($colors) == 1 {\n\t\t\t.blur {\n\t\t\t\twidth: $height * 50;\n\t\t\t\theight: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 1px;\n\t\t\t\tbox-shadow: 0 0 $height * 4 nth($colors, 1), 0 0 $height * 2 nth($colors, 1);\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(-3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.rtl .blur {\n\t\t\t\tleft: 1px;\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(-3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.bar {\n\t\t\theight: $height;\n\t\t\tposition: absolute;\n\t\t\tbackground-color: nth($colors, 1);\n\t\t\tpointer-events: none;\n\t\t\twill-change: transform;\n\t\t\t#{$position}: 0;\n\t\t\t@if length($colors) > 1 {\n\t\t\t\t$gradient-colors: append($colors, nth($colors, 1));\n\t\t\t\tbackground-image: linear-gradient(to right, $gradient-colors);\n\t\t\t\tbackground-size: length($gradient-colors) * 100%;\n\t\t\t\tanimation-name: #{$name}, fadein;\n\t\t\t\tanimation-duration: 2s, 0.3s;\n\t\t\t\tanimation-timing-function: linear, ease;\n\t\t\t\tanimation-iteration-count: infinite, 1;\n\t\t\t}\n\t\t}\n\t}\n",
          "line": {
            "start": 50,
            "end": 133
          }
        }
      },
      {
        "description": "Mixin to generate a custom μProgress style. Allow to customize, class name, height and colors.\nGenerate a monochrome progres bar if one colors is passed or a multi-color animated one if multiple colors are passed.\n\n",
        "context": {
          "type": "mixin",
          "name": "uprogress",
          "code": "\n\t@if $colors == null or length($colors) == 0 {\n\t\t$colors: $uprogress-colors;\n\t\t@warn '$colors is null or empty, using default $uprogress-colors (#{$uprogress-colors}) .';\n\t}\n\t@if $height == null {\n\t\t$height: $uprogress-height;\n\t\t@warn '$height is null, using default $uprogress-height (#{$uprogress-height}) .';\n\t}\n\t@if index($valid-position, $position) == null {\n\t\t$position: $uprogress-position;\n\t\t@warn '$position is not valid, using default $uprogress-position (#{$uprogress-position}) .';\n\t}\n\t@if length($colors) > 1 {\n\t\t@keyframes #{$name} {\n\t\t\t0% {\n\t\t\t\tbackground-position: 0 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\tbackground-position: (100% + 100% / length($colors)) 0;\n\t\t\t}\n\t\t}\n\t\t@keyframes fadein {\n\t\t\t0% {\n\t\t\t\topacity: 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t.#{$name} {\n\t\t#{$position}: 0;\n\t\toverflow: hidden;\n\t\theight: $height * 4;\n\t\tright: 0;\n\t\tleft: 0;\n\t\tz-index: $uprogress-zindex;\n\t\t@if length($colors) == 1 {\n\t\t\t.blur {\n\t\t\t\twidth: $height * 50;\n\t\t\t\theight: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 1px;\n\t\t\t\tbox-shadow: 0 0 $height * 4 nth($colors, 1), 0 0 $height * 2 nth($colors, 1);\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(-3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.rtl .blur {\n\t\t\t\tleft: 1px;\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(-3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.bar {\n\t\t\theight: $height;\n\t\t\tposition: absolute;\n\t\t\tbackground-color: nth($colors, 1);\n\t\t\tpointer-events: none;\n\t\t\twill-change: transform;\n\t\t\t#{$position}: 0;\n\t\t\t@if length($colors) > 1 {\n\t\t\t\t$gradient-colors: append($colors, nth($colors, 1));\n\t\t\t\tbackground-image: linear-gradient(to right, $gradient-colors);\n\t\t\t\tbackground-size: length($gradient-colors) * 100%;\n\t\t\t\tanimation-name: #{$name}, fadein;\n\t\t\t\tanimation-duration: 2s, 0.3s;\n\t\t\t\tanimation-timing-function: linear, ease;\n\t\t\t\tanimation-iteration-count: infinite, 1;\n\t\t\t}\n\t\t}\n\t}\n",
          "line": {
            "start": 50,
            "end": 133
          }
        }
      },
      {
        "description": "Mixin to generate a custom μProgress style. Allow to customize, class name, height and colors.\nGenerate a monochrome progres bar if one colors is passed or a multi-color animated one if multiple colors are passed.\n\n",
        "context": {
          "type": "mixin",
          "name": "uprogress",
          "code": "\n\t@if $colors == null or length($colors) == 0 {\n\t\t$colors: $uprogress-colors;\n\t\t@warn '$colors is null or empty, using default $uprogress-colors (#{$uprogress-colors}) .';\n\t}\n\t@if $height == null {\n\t\t$height: $uprogress-height;\n\t\t@warn '$height is null, using default $uprogress-height (#{$uprogress-height}) .';\n\t}\n\t@if index($valid-position, $position) == null {\n\t\t$position: $uprogress-position;\n\t\t@warn '$position is not valid, using default $uprogress-position (#{$uprogress-position}) .';\n\t}\n\t@if length($colors) > 1 {\n\t\t@keyframes #{$name} {\n\t\t\t0% {\n\t\t\t\tbackground-position: 0 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\tbackground-position: (100% + 100% / length($colors)) 0;\n\t\t\t}\n\t\t}\n\t\t@keyframes fadein {\n\t\t\t0% {\n\t\t\t\topacity: 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t.#{$name} {\n\t\t#{$position}: 0;\n\t\toverflow: hidden;\n\t\theight: $height * 4;\n\t\tright: 0;\n\t\tleft: 0;\n\t\tz-index: $uprogress-zindex;\n\t\t@if length($colors) == 1 {\n\t\t\t.blur {\n\t\t\t\twidth: $height * 50;\n\t\t\t\theight: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 1px;\n\t\t\t\tbox-shadow: 0 0 $height * 4 nth($colors, 1), 0 0 $height * 2 nth($colors, 1);\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(-3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.rtl .blur {\n\t\t\t\tleft: 1px;\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(-3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.bar {\n\t\t\theight: $height;\n\t\t\tposition: absolute;\n\t\t\tbackground-color: nth($colors, 1);\n\t\t\tpointer-events: none;\n\t\t\twill-change: transform;\n\t\t\t#{$position}: 0;\n\t\t\t@if length($colors) > 1 {\n\t\t\t\t$gradient-colors: append($colors, nth($colors, 1));\n\t\t\t\tbackground-image: linear-gradient(to right, $gradient-colors);\n\t\t\t\tbackground-size: length($gradient-colors) * 100%;\n\t\t\t\tanimation-name: #{$name}, fadein;\n\t\t\t\tanimation-duration: 2s, 0.3s;\n\t\t\t\tanimation-timing-function: linear, ease;\n\t\t\t\tanimation-iteration-count: infinite, 1;\n\t\t\t}\n\t\t}\n\t}\n",
          "line": {
            "start": 50,
            "end": 133
          }
        }
      }
    ]
  },
  {
    "description": "Z-index value of the µProgress.\n",
    "commentRange": {
      "start": 7,
      "end": 8
    },
    "context": {
      "type": "variable",
      "name": "uprogress-zindex",
      "value": "1000",
      "scope": "default",
      "line": {
        "start": 9,
        "end": 9
      }
    },
    "type": "Number",
    "access": "public",
    "group": [
      "undefined"
    ],
    "file": {
      "path": "_variables.scss",
      "name": "_variables.scss"
    },
    "usedBy": [
      {
        "description": "Mixin to generate a custom μProgress style. Allow to customize, class name, height and colors.\nGenerate a monochrome progres bar if one colors is passed or a multi-color animated one if multiple colors are passed.\n\n",
        "context": {
          "type": "mixin",
          "name": "uprogress",
          "code": "\n\t@if $colors == null or length($colors) == 0 {\n\t\t$colors: $uprogress-colors;\n\t\t@warn '$colors is null or empty, using default $uprogress-colors (#{$uprogress-colors}) .';\n\t}\n\t@if $height == null {\n\t\t$height: $uprogress-height;\n\t\t@warn '$height is null, using default $uprogress-height (#{$uprogress-height}) .';\n\t}\n\t@if index($valid-position, $position) == null {\n\t\t$position: $uprogress-position;\n\t\t@warn '$position is not valid, using default $uprogress-position (#{$uprogress-position}) .';\n\t}\n\t@if length($colors) > 1 {\n\t\t@keyframes #{$name} {\n\t\t\t0% {\n\t\t\t\tbackground-position: 0 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\tbackground-position: (100% + 100% / length($colors)) 0;\n\t\t\t}\n\t\t}\n\t\t@keyframes fadein {\n\t\t\t0% {\n\t\t\t\topacity: 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t.#{$name} {\n\t\t#{$position}: 0;\n\t\toverflow: hidden;\n\t\theight: $height * 4;\n\t\tright: 0;\n\t\tleft: 0;\n\t\tz-index: $uprogress-zindex;\n\t\t@if length($colors) == 1 {\n\t\t\t.blur {\n\t\t\t\twidth: $height * 50;\n\t\t\t\theight: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 1px;\n\t\t\t\tbox-shadow: 0 0 $height * 4 nth($colors, 1), 0 0 $height * 2 nth($colors, 1);\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(-3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.rtl .blur {\n\t\t\t\tleft: 1px;\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(-3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.bar {\n\t\t\theight: $height;\n\t\t\tposition: absolute;\n\t\t\tbackground-color: nth($colors, 1);\n\t\t\tpointer-events: none;\n\t\t\twill-change: transform;\n\t\t\t#{$position}: 0;\n\t\t\t@if length($colors) > 1 {\n\t\t\t\t$gradient-colors: append($colors, nth($colors, 1));\n\t\t\t\tbackground-image: linear-gradient(to right, $gradient-colors);\n\t\t\t\tbackground-size: length($gradient-colors) * 100%;\n\t\t\t\tanimation-name: #{$name}, fadein;\n\t\t\t\tanimation-duration: 2s, 0.3s;\n\t\t\t\tanimation-timing-function: linear, ease;\n\t\t\t\tanimation-iteration-count: infinite, 1;\n\t\t\t}\n\t\t}\n\t}\n",
          "line": {
            "start": 50,
            "end": 133
          }
        }
      }
    ]
  },
  {
    "description": "Default µProgress posistion (`top` or `bottom`).\n",
    "commentRange": {
      "start": 10,
      "end": 11
    },
    "context": {
      "type": "variable",
      "name": "uprogress-position",
      "value": "'top'",
      "scope": "default",
      "line": {
        "start": 12,
        "end": 12
      }
    },
    "type": "String",
    "access": "public",
    "group": [
      "undefined"
    ],
    "file": {
      "path": "_variables.scss",
      "name": "_variables.scss"
    },
    "usedBy": [
      {
        "description": "Mixin to generate a custom μProgress style. Allow to customize, class name, height and colors.\nGenerate a monochrome progres bar if one colors is passed or a multi-color animated one if multiple colors are passed.\n\n",
        "context": {
          "type": "mixin",
          "name": "uprogress",
          "code": "\n\t@if $colors == null or length($colors) == 0 {\n\t\t$colors: $uprogress-colors;\n\t\t@warn '$colors is null or empty, using default $uprogress-colors (#{$uprogress-colors}) .';\n\t}\n\t@if $height == null {\n\t\t$height: $uprogress-height;\n\t\t@warn '$height is null, using default $uprogress-height (#{$uprogress-height}) .';\n\t}\n\t@if index($valid-position, $position) == null {\n\t\t$position: $uprogress-position;\n\t\t@warn '$position is not valid, using default $uprogress-position (#{$uprogress-position}) .';\n\t}\n\t@if length($colors) > 1 {\n\t\t@keyframes #{$name} {\n\t\t\t0% {\n\t\t\t\tbackground-position: 0 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\tbackground-position: (100% + 100% / length($colors)) 0;\n\t\t\t}\n\t\t}\n\t\t@keyframes fadein {\n\t\t\t0% {\n\t\t\t\topacity: 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t.#{$name} {\n\t\t#{$position}: 0;\n\t\toverflow: hidden;\n\t\theight: $height * 4;\n\t\tright: 0;\n\t\tleft: 0;\n\t\tz-index: $uprogress-zindex;\n\t\t@if length($colors) == 1 {\n\t\t\t.blur {\n\t\t\t\twidth: $height * 50;\n\t\t\t\theight: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 1px;\n\t\t\t\tbox-shadow: 0 0 $height * 4 nth($colors, 1), 0 0 $height * 2 nth($colors, 1);\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(-3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.rtl .blur {\n\t\t\t\tleft: 1px;\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(-3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.bar {\n\t\t\theight: $height;\n\t\t\tposition: absolute;\n\t\t\tbackground-color: nth($colors, 1);\n\t\t\tpointer-events: none;\n\t\t\twill-change: transform;\n\t\t\t#{$position}: 0;\n\t\t\t@if length($colors) > 1 {\n\t\t\t\t$gradient-colors: append($colors, nth($colors, 1));\n\t\t\t\tbackground-image: linear-gradient(to right, $gradient-colors);\n\t\t\t\tbackground-size: length($gradient-colors) * 100%;\n\t\t\t\tanimation-name: #{$name}, fadein;\n\t\t\t\tanimation-duration: 2s, 0.3s;\n\t\t\t\tanimation-timing-function: linear, ease;\n\t\t\t\tanimation-iteration-count: infinite, 1;\n\t\t\t}\n\t\t}\n\t}\n",
          "line": {
            "start": 50,
            "end": 133
          }
        }
      },
      {
        "description": "Mixin to generate a custom μProgress style. Allow to customize, class name, height and colors.\nGenerate a monochrome progres bar if one colors is passed or a multi-color animated one if multiple colors are passed.\n\n",
        "context": {
          "type": "mixin",
          "name": "uprogress",
          "code": "\n\t@if $colors == null or length($colors) == 0 {\n\t\t$colors: $uprogress-colors;\n\t\t@warn '$colors is null or empty, using default $uprogress-colors (#{$uprogress-colors}) .';\n\t}\n\t@if $height == null {\n\t\t$height: $uprogress-height;\n\t\t@warn '$height is null, using default $uprogress-height (#{$uprogress-height}) .';\n\t}\n\t@if index($valid-position, $position) == null {\n\t\t$position: $uprogress-position;\n\t\t@warn '$position is not valid, using default $uprogress-position (#{$uprogress-position}) .';\n\t}\n\t@if length($colors) > 1 {\n\t\t@keyframes #{$name} {\n\t\t\t0% {\n\t\t\t\tbackground-position: 0 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\tbackground-position: (100% + 100% / length($colors)) 0;\n\t\t\t}\n\t\t}\n\t\t@keyframes fadein {\n\t\t\t0% {\n\t\t\t\topacity: 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t.#{$name} {\n\t\t#{$position}: 0;\n\t\toverflow: hidden;\n\t\theight: $height * 4;\n\t\tright: 0;\n\t\tleft: 0;\n\t\tz-index: $uprogress-zindex;\n\t\t@if length($colors) == 1 {\n\t\t\t.blur {\n\t\t\t\twidth: $height * 50;\n\t\t\t\theight: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 1px;\n\t\t\t\tbox-shadow: 0 0 $height * 4 nth($colors, 1), 0 0 $height * 2 nth($colors, 1);\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(-3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.rtl .blur {\n\t\t\t\tleft: 1px;\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(-3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.bar {\n\t\t\theight: $height;\n\t\t\tposition: absolute;\n\t\t\tbackground-color: nth($colors, 1);\n\t\t\tpointer-events: none;\n\t\t\twill-change: transform;\n\t\t\t#{$position}: 0;\n\t\t\t@if length($colors) > 1 {\n\t\t\t\t$gradient-colors: append($colors, nth($colors, 1));\n\t\t\t\tbackground-image: linear-gradient(to right, $gradient-colors);\n\t\t\t\tbackground-size: length($gradient-colors) * 100%;\n\t\t\t\tanimation-name: #{$name}, fadein;\n\t\t\t\tanimation-duration: 2s, 0.3s;\n\t\t\t\tanimation-timing-function: linear, ease;\n\t\t\t\tanimation-iteration-count: infinite, 1;\n\t\t\t}\n\t\t}\n\t}\n",
          "line": {
            "start": 50,
            "end": 133
          }
        }
      },
      {
        "description": "Mixin to generate a custom μProgress style. Allow to customize, class name, height and colors.\nGenerate a monochrome progres bar if one colors is passed or a multi-color animated one if multiple colors are passed.\n\n",
        "context": {
          "type": "mixin",
          "name": "uprogress",
          "code": "\n\t@if $colors == null or length($colors) == 0 {\n\t\t$colors: $uprogress-colors;\n\t\t@warn '$colors is null or empty, using default $uprogress-colors (#{$uprogress-colors}) .';\n\t}\n\t@if $height == null {\n\t\t$height: $uprogress-height;\n\t\t@warn '$height is null, using default $uprogress-height (#{$uprogress-height}) .';\n\t}\n\t@if index($valid-position, $position) == null {\n\t\t$position: $uprogress-position;\n\t\t@warn '$position is not valid, using default $uprogress-position (#{$uprogress-position}) .';\n\t}\n\t@if length($colors) > 1 {\n\t\t@keyframes #{$name} {\n\t\t\t0% {\n\t\t\t\tbackground-position: 0 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\tbackground-position: (100% + 100% / length($colors)) 0;\n\t\t\t}\n\t\t}\n\t\t@keyframes fadein {\n\t\t\t0% {\n\t\t\t\topacity: 0;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t.#{$name} {\n\t\t#{$position}: 0;\n\t\toverflow: hidden;\n\t\theight: $height * 4;\n\t\tright: 0;\n\t\tleft: 0;\n\t\tz-index: $uprogress-zindex;\n\t\t@if length($colors) == 1 {\n\t\t\t.blur {\n\t\t\t\twidth: $height * 50;\n\t\t\t\theight: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 1px;\n\t\t\t\tbox-shadow: 0 0 $height * 4 nth($colors, 1), 0 0 $height * 2 nth($colors, 1);\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(-3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.rtl .blur {\n\t\t\t\tleft: 1px;\n\t\t\t\t@if $position == 'top' {\n\t\t\t\t\ttransform: rotate(-3deg) translateY(-$height * 1.5);\n\t\t\t\t} @else {\n\t\t\t\t\ttransform: rotate(3deg) translateY($height * 1.5);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.bar {\n\t\t\theight: $height;\n\t\t\tposition: absolute;\n\t\t\tbackground-color: nth($colors, 1);\n\t\t\tpointer-events: none;\n\t\t\twill-change: transform;\n\t\t\t#{$position}: 0;\n\t\t\t@if length($colors) > 1 {\n\t\t\t\t$gradient-colors: append($colors, nth($colors, 1));\n\t\t\t\tbackground-image: linear-gradient(to right, $gradient-colors);\n\t\t\t\tbackground-size: length($gradient-colors) * 100%;\n\t\t\t\tanimation-name: #{$name}, fadein;\n\t\t\t\tanimation-duration: 2s, 0.3s;\n\t\t\t\tanimation-timing-function: linear, ease;\n\t\t\t\tanimation-iteration-count: infinite, 1;\n\t\t\t}\n\t\t}\n\t}\n",
          "line": {
            "start": 50,
            "end": 133
          }
        }
      }
    ]
  }
]
