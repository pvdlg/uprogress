{"version":3,"file":"uprogress.js","sources":["../node_modules/mout/function/debounce.js","../node_modules/mout/math/clamp.js","../src/js/util.js","../src/js/uprogress.js"],"sourcesContent":["\n\n    /**\n     * Debounce callback execution\n     */\n    function debounce(fn, threshold, isAsap){\n        var timeout, result;\n        function debounced(){\n            var args = arguments, context = this;\n            function delayed(){\n                if (! isAsap) {\n                    result = fn.apply(context, args);\n                }\n                timeout = null;\n            }\n            if (timeout) {\n                clearTimeout(timeout);\n            } else if (isAsap) {\n                result = fn.apply(context, args);\n            }\n            timeout = setTimeout(delayed, threshold);\n            return result;\n        }\n        debounced.cancel = function(){\n            clearTimeout(timeout);\n        };\n        return debounced;\n    }\n\n    module.exports = debounce;\n\n\n","\n    /**\n     * Clamps value inside range.\n     */\n    function clamp(val, min, max){\n        return val < min? min : (val > max? max : val);\n    }\n    module.exports = clamp;\n\n","/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\nconst CSS_PREFIXES = ['Webkit', 'O', 'Moz', 'ms'];\nconst PREFIXED_EVENT_NAMES = {\n  transition: 'transitionend',\n  MozTransition: 'mozTransitionEnd',\n  OTransition: 'oTransitionEnd',\n  WebkitTransition: 'webkitTransitionEnd',\n};\nconst PREFIXED_PROP_CACHE = {};\n\nexport const TRANSITION_END_EVENT = PREFIXED_EVENT_NAMES[getVendorProp('transition')];\n\n/**\n * ------------------------------------------------------------------------\n * Public methods\n * ------------------------------------------------------------------------\n */\n\n/**\n * Trigger a reflow on an element.\n *\n * @method reflow\n * @param {HTMLElement} element the element to reflow\n */\nexport function reflow(element) {\n  // eslint-disable-next-line no-unused-expressions\n  element.offsetHeight;\n}\n\n/**\n * Set a style property of an element.\n *\n * @method style\n * @param {HTMLElement} element the element on which to set the style property.\n * @param {string} prop the CSS property to set.\n * @param {string|number} value the value to set.\n */\nexport function style(element, prop, value) {\n  element.style[getVendorProp(prop)] = value;\n}\n\n/**\n * Set multiple style properties of an element.\n *\n * @method styles\n * @param {HTMLElement} element the element on which to set the style property.\n * @param {Object<string, Any>} props a hash of CSS properties and values to set.\n */\nexport function styles(element, props) {\n  for (let i = 0, keys = Object.keys(props), {length} = keys; i < length; i++) {\n    style(element, keys[i], props[keys[i]]);\n  }\n}\n\n/**\n * Get the camel case vendor prefixed version of a style attribute, if the browser doesn't support the unprefixed one.\n *\n * @method getVendorProp\n * @param {string} name the unprefixed camel case attribute\n * @return {string} the attribute supported by the browser\n */\nfunction getVendorProp(name) {\n  if (PREFIXED_PROP_CACHE[name]) {\n    return PREFIXED_PROP_CACHE[name];\n  }\n\n  if (!(name in document.body.style)) {\n    for (let i = 0, {length} = CSS_PREFIXES; i < length; i++) {\n      const vendorName = `${CSS_PREFIXES[i]}${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n\n      if (vendorName in document.body.style) {\n        PREFIXED_PROP_CACHE[name] = vendorName;\n        return vendorName;\n      }\n    }\n  }\n  PREFIXED_PROP_CACHE[name] = name;\n  return name;\n}\n\n/**\n * Get the kebab case version of a style attribute, unprefixed if the browser support it, prefixed otherwise.\n *\n * @method getVendorCSSProp\n * @param {String} name the unprefixed camel case attribute\n * @return {String} the attribute supported by the browser\n */\nexport function getVendorCSSProp(name) {\n  return getVendorProp(name)\n    .replace(/([A-Z])/g, (str, m1) => `-${m1.toLowerCase()}`)\n    .replace(/^ms-/, '-ms-');\n}\n\n/**\n * Execute a start function that trigger a transition, and if an end function is defined,\n * call it when the transition is over, for the given property.\n *\n * @method transition\n * @param {HTMLElement} element The element that will transition when the start function is called\n * @param {function} start a function that trigger the transition on element\n * @param {function} end the function to call when the transition ends\n * @param {boolean} immediate true to call the end function immediatly\n * @param {string} property the property that transition; end function will be called only at the end of the transition on that property\n */\nexport function transition(element, start, end, immediate, property) {\n  if (end) {\n    if (immediate) {\n      setTimeout(end);\n    } else {\n      const handler = event => {\n        if (!property || event.propertyName === getVendorCSSProp(property)) {\n          end(event);\n          element.removeEventListener(TRANSITION_END_EVENT, handler);\n        }\n      };\n\n      element.addEventListener(TRANSITION_END_EVENT, handler);\n    }\n  }\n  start();\n}\n","import debounce from 'mout/function/debounce';\nimport clamp from 'mout/math/clamp';\nimport {reflow, transition, style, styles, getVendorCSSProp} from './util';\n\n/*\n * ------------------------------------------------------------------------\n * Global variables\n * ------------------------------------------------------------------------\n */\n\n/**\n * Used to generate sequential id to save active UProgresses in allProgress\n * @private\n * @type {number}\n */\nlet keyCounter = 0;\n/**\n * Store active UProgresses (so the resize listener can be shared across instances)\n *\n * @private\n * @type {Object}\n */\nconst allUProgress = {};\n/**\n * Default options for all new {@link UProgress} instances.\n *\n * @private\n * @type {Object}\n * @see UProgress.default\n */\nconst DEFAULT = Object.seal({\n  rtl: false,\n  start: 0.01,\n  end: 0.99,\n  duration: 25000,\n  doneDuration: 100,\n  fadeDuration: 200,\n  class: 'uprogress',\n  barClass: 'bar',\n  blurClass: 'blur',\n  resizeDebounce: 300,\n});\n/**\n * Global function registered once to the window `resize` event. On window `resize` event, calls {@link UProgress#refresh} for each exixsting instances.\n * Debounced with threshold defined in `UProgress.Default.resizeDebounce`.\n *\n * @private\n * @type {function}\n */\nconst _onResize = debounce(() => {\n  for (let i = 0, keys = Object.keys(allUProgress), {length} = keys; i < length; i++) {\n    const uProgress = allUProgress[keys[i]];\n\n    if (uProgress._parent.contains(uProgress._wrapper)) {\n      uProgress.refresh();\n    } else {\n      uProgress.destroy();\n    }\n  }\n}, DEFAULT.resizeDebounce);\n\n/*\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\n/**\n * Creates and control a µProgress.\n * @class\n */\nclass UProgress {\n  /**\n   * - Create a new UProgress instance.\n   * - Create a `div` for the µProgress and add it to the `parent`.\n   * - Register to the `resize` event.\n   *\n   * @instance\n   * @constructor\n   * @param {HTMLElement} [parent=document.body] The `HTMLElement` on which the µProgress will stand on top of.\n   * @param {Object} [opts] The µProgress configutation.\n   * @param {boolean} [rtl=false] `true` to move the µProgress from right to left, `false` for left to right.\n   * @param {number} [opts.start=0.01] The position in percentage (.35 is 35%, 1 is 100%) at which the µProgress starts.\n   * @param {number} [opts.end=0.99] The position in percentage (.35 is 35%, 1 is 100%) the µProgress is moving toward when started. Once reached, it will stop until {@link UProgress#set} or {@link UProgress#done} are called.\n   * @param {number} [opts.duration=25000] The durarion in ms it takes for the µProgress to go from `opts.start` to `opts.end`.\n   * @param {number} [opts.doneDuration=100] The duration in ms that the µProgress take to complete when {@link UProgress#done} is called.\n   * @param {number} [opts.fadeDuration=200] The duration in ms the µProgress takes to fade out after it has completed.\n   * @param {number} [opts.class='uprogress'] The CSS class to set on the µProgress element.\n   * @param {number} [opts.barClass='bar'] The CSS class to set on the µProgress bar element.\n   * @param {number} [opts.blurClass='blur'] The CSS class to set on the µProgress blur element.\n   *\n   * @example\n   * Create a new µProgress on top of the viewport with default options.\n   * ```javascript\n   * const uProgress = new UProgress();\n   * uProgress.start();\n   * ```\n   * @example\n   * Create a new µProgress on top of a modal with default options.\n   * ```javascript\n   * const uProgress = new UProgress(document.getElementById('my-modal'));\n   * uProgress.start();\n   * ```\n   * @example\n   * Create a new µProgress on top of the viewport with custom options.\n   * ```javascript\n   * const uProgress = new UProgress({\n   *   start: 0.05,\n   *   duration: 30000\n   * });\n   * uProgress.start();\n   * ```\n   */\n  constructor(parent = document.body, opts) {\n    this._wrapper = document.createElement('div');\n    this._progressbar = document.createElement('div');\n    this._blur = document.createElement('div');\n    if (arguments.length === 1 && !(parent instanceof HTMLElement)) {\n      this._parent = document.body;\n      this._options(parent, DEFAULT);\n    } else {\n      this._options(opts, DEFAULT);\n      this._parent = parent;\n    }\n    this._progressbar.className = this._opts.barClass;\n    this._progressbar.setAttribute('role', 'bar');\n    this._wrapper.appendChild(this._progressbar);\n    this._blur.className = this._opts.blurClass;\n    this._progressbar.appendChild(this._blur);\n    this._width =\n      this._parent === document.body\n        ? Math.min(\n            document.body.scrollWidth,\n            document.documentElement.clientWidth,\n            document.documentElement.offsetWidth\n          )\n        : this._parent.clientWidth;\n    this._key = keyCounter;\n    this._started = false;\n    this._completing = false;\n    this._destroyed = false;\n    this._to = null;\n    this._from = null;\n    this._duration = null;\n    this._end = null;\n    this._rtl = false;\n    styles(this._wrapper, {\n      width: `${this._width}px`,\n      position: this._parent === document.body ? 'fixed' : 'absolute',\n    });\n    styles(this._progressbar, {\n      visibility: 'hidden',\n      width: `${this._width}px`,\n    });\n    this._parent.appendChild(this._wrapper);\n    if (Object.keys(allUProgress).length === 0) {\n      window.addEventListener('resize', _onResize);\n    }\n    allUProgress[this._key] = this;\n    keyCounter += 1;\n  }\n\n  /*\n   * ------------------------------------------------------------------------\n   * Public methods\n   * ------------------------------------------------------------------------\n   */\n\n  /**\n   * Display the µProgress and start its progress from `opts.start` to `opts.end` at a speed corresponding to `opts.duration`. Has no effect if the µProgress is already started.\n   *\n   * @method start\n   * @memberof UProgress\n   * @instance\n   * @return {boolean} `true` if the µProgress has started, `false` otherwise.\n   *\n   * @example\n   * Start the µProgress.\n   * ```javascript\n   * const uProgress = new UProgress();\n   * uProgress.start();\n   * // true\n   * ```\n   */\n  start() {\n    if (!this._started && !this._completing) {\n      this._from = this._opts.start;\n      this._rtl = this._opts.rtl;\n      this._wrapper.className = `${this._opts.class}${this._rtl ? ' rtl' : ''}`;\n      // Initialize µProgress and position it at 'start'\n      styles(this._progressbar, {\n        transition: 'none',\n        transform: `translateX(${this._targetToPosition(this._opts.start)}px)`,\n        opacity: 1,\n        visibility: 'visible',\n      });\n      reflow(this._progressbar);\n      this._started = true;\n      return this._set(this._opts.duration, this._opts.end);\n    }\n    return false;\n  }\n\n  /**\n   * Change the µProgress `target` and the speed at which it reaches it. Useful to give a more accurate progress of multiple sequentials tasks.\n   * If the value of `duration` parameter is equal or greater than 1, then the µProgress will automatically fade out once it reaches 100% progress (equivalent to calling {@link UProgress#done} with `opts.doneDuration` = `duration`).\n   *\n   * @method set\n   * @memberof UProgress\n   * @instance\n   * @param {number} duration The duration in ms the µProgress will take to reach its `target`.\n   * @param {number} [target] The position in percentage (.35 is 35%, 1 is 100%) the µProgress will moving toward. Once reached, it will stop until {@link UProgress#set} or {@link UProgress#done} are called. If `undefined` or `null`, the µProgress target will stay the same.\n   * @param {boolean} [force=false] `true` to set the requested `target` even if ti makes the µProgress moves backward.\n   * @return {boolean} `true` if the µProgress `duration` or `target` has been changed, `false` otherwise.\n   *\n   * @example\n   * Update µProgress speed based on tasks progress.\n   * ```javascript\n   * // doHeavyTask calls a callback when done and is expected to takes up to 7s\n   * // doLightTask calls a callback when done and is expected to takes up to 3s\n   * const uProgress = new UProgress({\n   *   duration: 7000\n   *   end: 0.7\n   * });\n   * uProgress.start();\n   * doHeavyTask(() => {\n   *   // when heavy task is done\n   *   uProgress.set(3000, .99);\n   *   doLightTask(() => {\n   *     // When light task is done\n   *     uProgress.done();\n   *   });\n   * });\n   * ```\n   */\n  set(duration, target = this._to, force = false) {\n    if (this._started && !this._completing) {\n      if (target !== null && target >= 1) {\n        return this._done(false, duration, this._opts.fadeDuration);\n      }\n      if (target === null || force || this._status().progress < target) {\n        return this._set(duration, target === null ? this._to : Math.max(target, this._opts.start), force);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gracefully complete the µProgress by moving quickly to 100% progress and then fading out. It will moves to 100% at the speed corresponding to `opts.doneDuration` and then fade out with the duration of `opts.fadeDuration`.\n   * Has no effect if the µProgress is not started or if {@link UProgress#done}).\n   *\n   * @method done\n   * @memberof UProgress\n   * @instance\n   * @param  {boolean} destroy `true` to automatically call {@link UProgress#destroy} once the µProgress has completed.\n   * @return {boolean} `true` if the µProgress is going to be completed, `false` otherwise.\n   *\n   * @example\n   * Complete the µProgress once the monitored task is done.\n   * ```javascript\n   * // `doTask` calls a callback when done\n   * const uProgress = new UProgress();\n   * uProgress.start();\n   * doTask(() => {\n   *   // when task is done,\n   *   uProgress.done();\n   * });\n   * ```\n   */\n  done(destroy) {\n    return this._done(destroy, this._opts.doneDuration, this._opts.fadeDuration);\n  }\n\n  /**\n   * Status of the µProgress instance.\n   *\n   * @typedef {Object} Status\n   * @memberof UProgress\n   * @inner\n   * @property {number} target The position in percentage (.35 is 35%, 1 is 100%) the µProgress is moving toward. Once reached, it will stop until {@link UProgress#set} or {@link UProgress#done} are called.\n   * @property {number} duration The duration in ms left to reach the position `Status.target`. Only returned if the µProgress is started.\n   * @property {number} progress The current progress in percentage (.35 is 35%, 1 is 100%). Only returned if the µProgress is started.\n   */\n\n  /**\n   * Get the {@link UProgress~Status} of the µProgress if it's not destroyed, `false` otherwise.\n   *\n   * @method status\n   * @memberof UProgress\n   * @instance\n   * @return {Status|boolean} The current {@link UProgress~Status} or `false`.\n   *\n   * @example\n   * Get the status.\n   * ```javascript\n   * const uProgress = new UProgress({duration: 20000});\n   * uProgress.start();\n   * setTimeout(() => {\n   *   uProgress.status();\n   *   // {target: 0.99, duration: 15000, progress: 0.25}\n   * }, 5000);\n   * ```\n   */\n  status() {\n    return this._destroyed ? false : this._status();\n  }\n\n  /**\n   * Update the µProgress instance configuration.\n   *\n   * @method options\n   * @memberof UProgress\n   * @instance\n   * @param {Object} [opts] The µProgress configutation.\n   * @param {boolean} [rtl=false] `true` to move the µProgress from right to left, `false` for left to right.Will be used on next call to {@link UProgress#start}.\n   * @param {number} [opts.start=0.01] The position in percentage (.35 is 35%, 1 is 100%) at which the µProgress starts. Will be used on next call to {@link UProgress#start}.\n   * @param {number} [opts.end=0.99] The position in percentage (.35 is 35%, 1 is 100%) the µProgress is moving toward when started. Once reached, it will stop until {@link UProgress#set} or {@link UProgress#done} are called. Will be used on next call to {@link UProgress#start}.\n   * @param {number} [opts.duration=25000] The durarion in ms it takes for the µProgress to go from `opts.start` to `opts.end`. Will be used on next call to {@link UProgress#start}.\n   * @param {number} [opts.doneDuration=100] The duration in ms that the µProgress take to complete when {@link UProgress#done} is called. Will be used on next call to {@link UProgress#done}.\n   * @param {number} [opts.fadeDuration=200] The duration in ms the µProgress takes to fade out after it has completed. Will be used on next call to {@link UProgress#done}.\n   * @param {number} [opts.class='uprogress'] The CSS class to set on the the µProgress element. Will be applied right away.\n   * @param {number} [opts.barClass='bar'] The CSS class to set on the the µProgress bar element. Will be applied right away.\n   * @param {number} [opts.blurClass='blur'] The CSS class to set on the the µProgress blur element. Will be applied right away.\n   * @return {UProgress} this, chainable\n   *\n   * @example\n   * Change duration.\n   * ```javascript\n   * const uProgress = new UProgress();\n   * uProgress.options({duration: 20000}).start();\n   * setTimeout(() => {\n   *   uProgress.status();\n   *   // {target: 0.99, duration: 5000, progress: 0.75}\n   * }, 15000);\n   * ```\n   */\n  options(opts) {\n    this._options(opts);\n    return this;\n  }\n\n  /**\n   * Update the µProgress with and position based on its parent width. This methods is automatically called on a window `resize` event. However it has to be called manually if the parent container width changes for a reason other than a window resize.\n   *\n   * @method refresh\n   * @memberof UProgress\n   * @instance\n   *\n   * @example\n   * Create a new µProgress on top of a modal and change it's width.\n   * ```javascript\n   * const uProgress = new UProgress(document.getElementById('my-modal'));\n   * // Modify the modal content (i.e. refresh content with Ajax)\n   * changeModalContent();\n   * uProgress.refresh();\n   * ```\n   */\n  refresh() {\n    const parentWidth =\n      this._parent === document.body\n        ? Math.min(\n            document.body.scrollWidth,\n            document.documentElement.clientWidth,\n            document.documentElement.offsetWidth\n          )\n        : this._parent.clientWidth;\n\n    if (parentWidth !== this._width) {\n      const transitionProgress =\n        1 - this._progressbar.getBoundingClientRect().left / (this._width * (this._rtl ? 1 : -1));\n\n      this._width = parentWidth;\n      style(this._wrapper, 'width', `${this._width}px`);\n      style(this._progressbar, 'width', `${this._width}px`);\n      if (this._started) {\n        styles(this._progressbar, {\n          transition: 'none',\n          transform: `translateX(${this._targetToPosition(transitionProgress)}px)`,\n        });\n        reflow(this._progressbar);\n        styles(this._progressbar, {\n          transition: `${getVendorCSSProp('transform')} ${this._status().duration}ms linear`,\n          transform: `translateX(${this._targetToPosition(this._to)}px)`,\n        });\n      }\n    }\n  }\n\n  /**\n   * - Remove the µProgress from the DOM.\n   * - Remove the `resize` event listener if this is the only non-destroyed instance.\n   *\n   * @method destroy\n   * @memberof UProgress\n   * @instance\n   */\n  destroy() {\n    if (!this._destroyed) {\n      if (this._wrapper.parentNode === this._parent) {\n        this._parent.removeChild(this._wrapper);\n      }\n      delete allUProgress[this._key];\n      if (Object.keys(allUProgress).length === 0) {\n        window.removeEventListener('resize', _onResize);\n        _onResize.cancel();\n      }\n      this._started = false;\n      this._destroyed = true;\n    }\n  }\n\n  /*\n   * ------------------------------------------------------------------------\n   * Private methods\n   * ------------------------------------------------------------------------\n   */\n\n  /**\n   * Update the µProgress instance configuration.\n   *\n   * @method _options\n   * @private\n   * @memberof UProgress\n   * @instance\n   * @param {Object} opts New options to set.\n   * @param {Object} [base=this._opts] Options to use when not defined in `opts`.\n   */\n  _options(opts, base = this._opts) {\n    this._opts = Object.assign({}, base, opts);\n    this._opts.start = clamp(this._opts.start, 0, 0.99);\n    this._opts.end = clamp(this._opts.end, this._opts.start, 1);\n    this._opts.doneDuration = Math.max(this._opts.doneDuration, 0);\n    this._opts.fadeDuration = Math.max(this._opts.fadeDuration, 0);\n    if (opts && opts.class) {\n      this._wrapper.className = `${this._opts.class}${this._rtl ? ' rtl' : ''}`;\n    }\n    if (opts && opts.blurClass) {\n      this._blur.className = this._opts.blurClass;\n    }\n    if (opts && opts.barClass) {\n      this._progressbar.className = this._opts.barClass;\n    }\n  }\n\n  /**\n   * Change the µProgress `target` and the speed at which it reaches it.\n   *\n   * @method _set\n   * @private\n   * @memberof UProgress\n   * @instance\n   * @param {number} [duration=null] The duration in ms the µProgress will take to reach its `target`.\n   * @param {number} [target=this._to] The position in percentage (.35 is 35%, 1 is 100%) the µProgress will moving toward.\n   * @return {boolean} `true` if the µProgress `duration` or `target` has been changed, `false` otherwise.\n   */\n  _set(duration = null, target = this._to) {\n    if (duration !== null && !this._destroyed) {\n      if (target === this._to) {\n        // Stop the transition by setting the target position to the current one\n        style(this._progressbar, 'transform', `translateX(${this._progressbar.getBoundingClientRect().left}px)`);\n        reflow(this._progressbar);\n      }\n      this._duration = Math.max(duration, 0);\n      this._to = target;\n      this._end = Date.now() + this._duration;\n      this._from = this._status().progress;\n      styles(this._progressbar, {\n        transition: this._duration > 0 ? `${getVendorCSSProp('transform')} ${this._duration}ms linear` : 'none',\n        transform: `translateX(${this._targetToPosition(this._to)}px)`,\n      });\n      reflow(this._progressbar);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Get the {@link UProgress~Status} of the µProgress.\n   *\n   * @method _status\n   * @private\n   * @memberof UProgress\n   * @instance\n   * @return {Status} The current {@link UProgress~Status}.\n   */\n  _status() {\n    if (!this._started) {\n      return {target: this._opts.end};\n    }\n    const duration = Math.max(0, this._end - Date.now());\n\n    return {\n      target: this._to,\n      duration,\n      progress: this._from + (this._to - this._from) * (1 - (this._duration <= 0 ? 0 : duration / this._duration)),\n    };\n  }\n\n  /**\n   * Gracefully complete the µProgress by moving quickly to 100% progress and then fading out.\n   *\n   * @method _done\n   * @private\n   * @memberof UProgress\n   * @instance\n   * @param  {boolean} destroy `true` to automatically call {@link UProgress#destroy} once the µProgress has completed.\n   * @param {number} doneDuration The duration in ms that the µProgress take to complete.\n   * @param {number} fadeDuration The duration in ms the µProgress takes to fade out after it has completed.\n   * @return {boolen} `true` if the µProgress is going to be completed, `false` otherwise.\n   */\n  _done(destroy, doneDuration, fadeDuration) {\n    if (this._started && !this._destroyed && !this._completing) {\n      this._completing = true;\n      transition(\n        this._progressbar,\n        () => {\n          this._set(doneDuration, 1);\n        },\n        () =>\n          transition(\n            this._progressbar,\n            () => {\n              this._started = false;\n              styles(this._progressbar, {\n                transition: fadeDuration > 0 ? `opacity ${fadeDuration}ms linear` : 'none',\n                opacity: 0,\n              });\n              reflow(this._progressbar);\n            },\n            () => {\n              if (destroy) {\n                this.destroy();\n              } else {\n                style(this._progressbar, 'visibility', 'hidden');\n                this._to = null;\n              }\n              this._completing = false;\n            },\n            fadeDuration <= 0,\n            'opacity'\n          ),\n        doneDuration <= 0,\n        'transform'\n      );\n    } else if (destroy) {\n      this.destroy();\n      return this._started;\n    } else {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Convert a target (in percentage) to a pixel position.\n   *\n   * @method _targetToPosition\n   * @private\n   * @param {number} target The target to convert (number between 0 and 1).\n   * @return {number} The position in pixel corresponding to the given target.\n   */\n  _targetToPosition(target) {\n    return this._width * (1 - target) * (this._rtl ? 1 : -1);\n  }\n}\n\n/**\n  * The default options for all new µProgress instances.\n  *\n  * @name Default\n  * @memberof UProgress\n  * @static\n  * @constant\n  * @default\n  * @readonly\n  * @type {Object}\n  * @property {boolean} [rtl=false] `true` to move the µProgress from right to left, `false` for left to right.\n  * @property {number} [start=0.01] The position in percentage (.35 is 35%, 1 is 100%) at which the µProgress starts.\n  * @property {number} [end=0.99] The position in percentage (.35 is 35%, 1 is 100%) the µProgress is moving toward when started. Once reached, it will stop until {@link UProgress#set} or {@link UProgress#done} are called.\n  * @property {number} [duration=2500] The durarion in ms it takes for the µProgress to go from `start` to `end`.\n  * @property {number} [doneDuration=100] The duration in ms that the µProgress take to complete when {@link UProgress#done} is called.\n  * @property {number} [fadeDuration=200] The duration in ms the µProgress takes to fade out after it has completed.\n  * @property {number} [class='uprogress'] The CSS class to set on the the µProgress element.\n  * @property {number} [blurClass='blur'] The CSS class to set on the the µProgress blur element.\n  * @property {number} [barClass='bar'] The CSS class to set on the the µProgress bar element.\n  * @property {number} [resizeDebounce=300] the debounce threshold after which a window `resize` event trigger a call to {@link UProgress#refresh}.\n  *\n  * @example\n  * Change default options\n  * ```javascript\n  * UProgress.Default.duration = 3000;\n  * UProgress.Default.class = 'custom-uprogress';\n  * ```\n  */\nObject.defineProperty(UProgressAPI, 'Default', {\n  get() {\n    return DEFAULT;\n  },\n});\n\n/**\n * Wrap an instance of {@link UProgress} in a closure to exposed only public methods, and hide private attributes.\n *\n * @method UProgressAPI\n * @private\n * @param {...Any} args arguments passed to {@link UProgress#constrcutor}.\n * @constructor\n */\nexport default function UProgressAPI(...args) {\n  const uProgress = new UProgress(...args);\n  const self = {};\n\n  for (\n    let i = 0, PUBLIC_METHODS = ['start', 'done', 'set', 'status', 'refresh', 'destroy'], {length} = PUBLIC_METHODS;\n    i < length;\n    i++\n  ) {\n    self[PUBLIC_METHODS[i]] = uProgress[PUBLIC_METHODS[i]].bind(uProgress);\n  }\n  self.options = (...chainableArgs) => {\n    uProgress.options(...chainableArgs);\n    return self;\n  };\n  return Object.freeze(self);\n}\n"],"names":["debounce","fn","threshold","isAsap","timeout","result","debounced","args","arguments","context","delayed","apply","setTimeout","cancel","clamp","val","min","max","CSS_PREFIXES","PREFIXED_EVENT_NAMES","PREFIXED_PROP_CACHE","TRANSITION_END_EVENT","getVendorProp","reflow","element","offsetHeight","style","prop","value","styles","props","keys","Object","length","i","name","document","body","vendorName","charAt","toUpperCase","slice","getVendorCSSProp","replace","str","m1","toLowerCase","transition","start","end","immediate","property","handler","event","propertyName","removeEventListener","addEventListener","keyCounter","allUProgress","DEFAULT","seal","_onResize","uProgress","_parent","contains","_wrapper","refresh","destroy","resizeDebounce","UProgress","parent","opts","createElement","_progressbar","_blur","HTMLElement","_options","className","_opts","barClass","setAttribute","appendChild","blurClass","_width","Math","scrollWidth","documentElement","clientWidth","offsetWidth","_key","_started","_completing","_destroyed","_to","_from","_duration","_end","_rtl","rtl","class","_targetToPosition","_set","duration","set","target","force","_done","fadeDuration","_status","progress","done","doneDuration","status","options","parentWidth","transitionProgress","getBoundingClientRect","left","parentNode","removeChild","base","babelHelpers.extends","Date","now","defineProperty","UProgressAPI","self","PUBLIC_METHODS","bind","freeze"],"mappings":"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"}