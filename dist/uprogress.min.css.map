{"version":3,"sources":["../src/scss/_mixin.scss","../src/scss/_variables.scss"],"names":[],"mappings":"AAuFE,WAKE,WAAmB,AAFnB,OAAO,AAGP,gBAAgB,AAJhB,QAAQ,AADR,MAAe,AAGf,YCnFmB,CDmIpB,AApDD,iBAiBQ,6CAAkD,AAAlD,2CAAkD,AAHpD,mDCnGkB,ADsGhB,gDAAkD,AAHpD,2CCnGkB,ADkGlB,YAAY,AAHZ,kBAAkB,AAClB,UAAU,AAMR,wCAAkD,AALpD,WAAmB,CASpB,AArBL,qBA2BQ,8CAAmD,AAAnD,4CAAmD,AAAnD,iDAAmD,AAHrD,SAAS,AAGP,wCAAmD,CAItD,AA/BL,gBAuCI,yBC5HoB,AD0HpB,WCvHgB,ADwHhB,oBAAoB,AAHpB,kBAAkB,AAClB,MAAe,AAIf,qBAAsB,CAWvB","file":"uprogress.min.css","sourcesContent":["@import 'variables';\n\n/// Valid values for the $position parameter.\n/// @type List<String>\n/// @access private\n$valid-position: 'top', 'bottom';\n\n/// Mixin to generate a custom μProgress style. Allow to customize, class name, height and colors.\n/// Generate a monochrome progres bar if one colors is passed or a multi-color animated one if multiple colors are passed.\n///\n/// @param {String} $name [uprogress] - class to apply to the μProgress.\n/// @param {Length} $height [`$uprogress-height`] - progressbar height.\n/// @param {List<Color>} $colors [`$uprogress-colors`] - List of Colors.\n/// @param {String} $position [`$uprogress-position`] - Position the µProgress on top or on bottom of its parent.\n/// @output A CSS class to pass in the `class` option of the `UProgress` Javascript module.\n///\n/// @example scss - A purple progress bar with a height of .25rem\n///   @include uprogress(purple-progress, .25rem, rgb(113, 62, 208));\n///\n///   // CSS Output\n///   .purple-progress {\n///     ...\n///     top: 0;\n///     height: .25rem;\n///     ...\n///     background-color: rgb(113, 62, 208);\n///   }\n///   .purple-progress.blur {\n///     ...\n///     color: rgb(113, 62, 208);\n///     ...\n///   }\n///\n/// @example scss - A multi-color progress bar with default height (2px)\n///   @include uprogress($name: rainbow-progress, $colors: (#17a0d3, #713ed0, #fc8d03, #38ad5d), $position: 'bottom');\n///\n///   // CSS Output\n///   .purple-progress {\n///     ...\n///     bottom: 0;\n///     height: 2px;\n///     ...\n///     background-color: #17a0d3;\n///     background-image: linear-gradient(to right, #17a0d3, #713ed0, #fc8d03, #38ad5d, #17a0d3);\n///     background-size: 500%;\n///     animation: 2s linear infinite rainbow-progress, 0.3s fadein;\n///   }\n///   @keyframes fadein { ... }\n///   @keyframes rainbow-progress { ... }\n@mixin uprogress(\n  $name: 'uprogress', $height: $uprogress-height, $colors: $uprogress-colors, $position: $uprogress-position) {\n  @if $colors == null or length($colors) == 0 {\n    $colors: $uprogress-colors;\n\n    @warn '$colors is null or empty, using default $uprogress-colors (#{$uprogress-colors}) .';\n  }\n  @if $height == null {\n    $height: $uprogress-height;\n\n    @warn '$height is null, using default $uprogress-height (#{$uprogress-height}) .';\n  }\n  @if index($valid-position, $position) == null {\n    $position: $uprogress-position;\n\n    @warn '$position is not valid, using default $uprogress-position (#{$uprogress-position}) .';\n  }\n  @if length($colors) > 1 {\n    @keyframes #{$name} {\n      0% {\n        background-position: 0 0;\n      }\n\n      100% {\n        background-position: (100% + 100% / length($colors)) 0;\n      }\n    }\n    @keyframes fadein {\n      0% {\n        opacity: 0;\n      }\n\n      100% {\n        opacity: 1;\n      }\n    }\n  }\n\n  .#{$name} {\n    #{$position}: 0;\n    right: 0;\n    left: 0;\n    z-index: $uprogress-zindex;\n    height: $height * 4;\n    overflow: hidden;\n\n    @if length($colors) == 1 {\n      .blur {\n        position: absolute;\n        right: 1px;\n        width: $height * 50;\n        height: 100%;\n        box-shadow: 0 0 $height * 4 nth($colors, 1), 0 0 $height * 2 nth($colors, 1);\n\n        @if $position == 'top' {\n          transform: rotate(3deg) translateY(-$height * 1.5);\n        } @else {\n          transform: rotate(-3deg) translateY($height * 1.5);\n        }\n      }\n\n      &.rtl .blur {\n        left: 1px;\n\n        @if $position == 'top' {\n          transform: rotate(-3deg) translateY(-$height * 1.5);\n        } @else {\n          transform: rotate(3deg) translateY($height * 1.5);\n        }\n      }\n    }\n\n    .bar {\n      position: absolute;\n      #{$position}: 0;\n      height: $height;\n      pointer-events: none;\n      background-color: nth($colors, 1);\n      will-change: transform;\n\n      @if length($colors) > 1 {\n        $gradient-colors: append($colors, nth($colors, 1));\n        background-image: linear-gradient(to right, $gradient-colors);\n        background-size: length($gradient-colors) * 100%;\n        animation-name: #{$name}, fadein;\n        animation-duration: 2s, .3s;\n        animation-timing-function: linear, ease;\n        animation-iteration-count: infinite, 1;\n      }\n    }\n  }\n}\n","/// Default µProgress color.\n/// @type Color\n$uprogress-colors: #006be5 !default;\n/// Default µProgress height.\n/// @type String\n$uprogress-height: 2px !default;\n/// Z-index value of the µProgress.\n/// @type Number\n$uprogress-zindex: 1000 !default;\n/// Default µProgress posistion (`top` or `bottom`).\n/// @type String\n$uprogress-position: 'top' !default;\n"]}